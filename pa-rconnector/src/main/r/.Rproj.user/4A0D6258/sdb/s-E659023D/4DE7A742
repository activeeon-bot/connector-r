{
    "contents" : "## TODO implement all job methods\n\nsetClass( \n  Class=\"PAJob\", \n  slots = c(\n       javaObject = \"jobjRef\",\n       tasks = \"list\",\n       hash = \"character\"            \n    ),\n  prototype=prototype(\n    javaObject = .jnew(J(\"org.ow2.proactive.scheduler.common.job.TaskFlowJob\")),\n    tasks = list(),\n    hash = \"NOTSET\"\n  )\n)\n\nPAJob <- function(jobName,jobDescription) {\n  object = new (Class=\"PAJob\", javaObject = .jnew(J(\"org.ow2.proactive.scheduler.common.job.TaskFlowJob\")), tasks = list())\n  setName(object, jobName)\n  setDescription(object, jobDescription)\n  object@hash <- .getSpaceHash()\n  return(object)\n}\n\n \n\nsetMethod(\"getJavaObject\", \"PAJob\",\n          function(object) {\n            return(object@javaObject)                          \n          } \n)\n\n \n\nsetReplaceMethod(\"addTask\" ,\"PAJob\" ,\n          function(object,value) {\n            tsk <- value\n            object@tasks[[getName(tsk)]] <- tsk\n            jo = object@javaObject\n            jtsk <- getJavaObject(tsk)\n            if (length(tsk@inputfiles) > 0) {\n              for (i in 1:length(tsk@inputfiles)) {\n                pafile <- tsk@inputfiles[[i]]                \n                jtsk$addInputFiles(getSelector(pafile), getMode(pafile,TRUE))\n              }\n            }\n            if (length(tsk@outputfiles) > 0) {\n              for (i in 1:length(tsk@outputfiles)) {\n                pafile <- tsk@outputfiles[[i]]                \n                jtsk$addOutputFiles(getSelector(pafile), getMode(pafile,FALSE))\n              }\n            }\n            jo$addTask(jtsk)\n            return(object)\n          }\n)\n\nsetMethod(\"getName\", \"PAJob\",\n          function(object) {\n            return(object@javaObject$getName())                          \n          } \n)\n\nsetMethod(\"setName\", \"PAJob\",\n          function(object,value) {\n            return(object@javaObject$setName(value))                          \n          } \n)\n\nsetMethod(\"getProjectName\", \"PAJob\",\n          function(object) {\n            return(object@javaObject$getProjectName())                          \n          } \n)\n\nsetMethod(\"setProjectName\", \"PAJob\",\n          function(object,value) {\n            return(object@javaObject$setProjectName(value))                          \n          } \n)\n\nsetMethod(\"getDescription\", \"PAJob\",\n          function(object) {\n            return(object@javaObject$getDescription())                          \n          } \n)\n\nsetMethod(\"setDescription\", \"PAJob\",\n          function(object,value) {\n            return(object@javaObject$setDescription(value))                          \n          } \n)\nsetMethod(\"getPriority\", \"PAJob\",\n          function(object) {\n            return(object@javaObject$getPriority()$toString())                          \n          } \n)\nsetMethod(\"setPriority\", \"PAJob\",\n          function(object,value) {\n            JobPriority <- J(\"org.ow2.proactive.scheduler.common.job.JobPriority\")\n            prio <- JobPriority$findPriority(value)\n            return(object@javaObject$setPriority(prio))                          \n          } \n)\nsetMethod(\"setCancelJobOnError\", \"PAJob\",\n          function(object,value) {            \n            return(object@javaObject$setCancelJobOnError(value))                          \n          } \n)\nsetMethod(\"isCancelJobOnError\", \"PAJob\",\n          function(object) {\n            return(object@javaObject$isCancelJobOnError())                          \n          } \n)\n\n\nsetMethod(\"toString\" ,c(\"PAJob\"),\n          function(x, width = NULL, ...) {\n            object <- x\n            jo = object@javaObject\n            output <- \"ProActive Job\\n\"\n            if (!is.null(jo$getName())) {     \n              output <- str_c(output,\"  name : \",jo$getName(),\"\\n\")\n            }\n            \n            if (!is.null(jo$getProjectName())) {     \n              output <- str_c(output,\"  projectName : \",jo$getProjectName(),\"\\n\")\n            }\n            if (!is.null(jo$getDescription())) {  \n              output <- str_c(output,\"  description : \",jo$getDescription(),\"\\n\")\n            }\n            if (!is.null(jo$getPriority())) { \n              output<- str_c(output,\"  jobPriority : \",jo$getPriority()$toString(),\"\\n\")\n            }\n            \n            output<- str_c(output,\"  cancelOnError : \",jo$isCancelJobOnError(),\"\\n\")\n            \n            if (!is.null(jo$getInputSpace())) {      \n              output <- str_c(output,\"  inputSpace : \",jo$getInputSpace(),\"\\n\")\n            }\n            if (!is.null(jo$getOutputSpace())) {\n              output <- str_c(output,\"  outputSpace : \",jo$getOutputSpace(),\"\\n\")\n            }\n            if (!is.null(jo$getGlobalSpace())) {\n              output <- str_c(output,\"  globalSpace : \",jo$getGlobalSpace(),\"\\n\")\n            }\n            if (!is.null(jo$getUserSpace())) {\n              output <- str_c(output,\"  userSpace : \",jo$getUserSpace(),\"\\n\")\n            }\n            if (length(object@tasks) > 0) {      \n              output <- str_c(output,\"  tasks : \")\n              for (i in 1:length(object@tasks)) {\n                output <- str_c(output,getName(object@tasks[[i]]))\n                if (i < length(object@tasks)) {\n                  output <- str_c(output,\", \")\n                }\n              }              \n              output <- str_c(output,\"\\n\")\n            }\n            \n            if (length(object@tasks) > 0) {      \n              output <- str_c(output,\"  tasks contents : \\n{\\n\")\n              for (i in 1:length(object@tasks)) {\n                output <- str_c(output,toString(object@tasks[[i]]))\n                \n                output <- str_c(output,\"\\n\")\n                \n              }              \n              output <- str_c(output,\"}\\n\")\n            }\n            return(output)\n          } \n)\n\nsetMethod(\"show\" ,\"PAJob\",\n          function(object) {\n            cat(toString(object))                        \n          } \n)\n\nsetMethod(\"print\" ,\"PAJob\" ,\n          function(x, ...) {\n            print(toString(x))                                 \n          } \n)",
    "created" : 1434116388605.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "851535377",
    "id" : "4DE7A742",
    "lastKnownWriteTime" : 1434116395,
    "path" : "C:/Users/fviale/IdeaProjects/r_connector/par-connector/src/main/r/R/PAJob.r",
    "project_path" : "R/PAJob.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}